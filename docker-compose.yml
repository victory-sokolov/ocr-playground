name: ocr

services:

  appocr:
    restart: unless-stopped
    tty: true
    build:
      context: ./ocr
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    env_file:
      - .env
    ports:
      - 8082:8082
    networks:
      - ocr-network
    healthcheck:
      test: ["CMD", "curl", "-f", "--insecure", "https://localhost:8082/api/v1/health"]
      interval: 20s
      timeout: 10s
      retries: 2
      start_period: 40s
    platform: linux/amd64 # Patch for M1 Mac
    depends_on:
      redis:
        condition: service_started
      postgres-db:
        condition: service_healthy

  redis:
    restart: on-failure
    build:
      context: infrastructure/docker/redis
    security_opt:
      - no-new-privileges:true
    ports:
      - 6389:6379
    networks:
      - ocr-network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    # Run as privileged to allow the container to change the vm.overcommit_memory setting
    privileged: true
    volumes:
      - ./data/redis:/data
      - ./infrastructure/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  nginx:
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    environment:
      - CERTBOT_EMAIL
    env_file:
      - ./infrastructure/docker/nginx/nginx.env
    ports:
      - 80:80
      - 443:443
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
    volumes:
      - nginx_secrets:/etc/letsencrypt

  postgres-db:
    restart: on-failure
    build:
      context: infrastructure/docker/postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - ocr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p ${PGPORT} -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  pg_data:
  nginx_secrets:

networks:
  ocr-network:
    name: ocr-network
    external: true
    driver: bridge
