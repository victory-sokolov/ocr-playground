services:

  redis:
    restart: on-failure
    container_name: redis-ocr
    build:
      context: docker/redis
    security_opt:
      - no-new-privileges:true
    ports:
      - 6389:6389
    command: redis-server --loglevel warning
    # Run as privileged to allow the container to change the vm.overcommit_memory setting
    privileged: true
    volumes:
      - ./data/redis:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

  nginx:
    restart: on-failure
    container_name: nginx-ocr
    build:
      context: docker/nginx
    volumes:
      - ./certs:/etc/nginx/certs
    ports:
      - "8082:443"

  postgres:
    restart: on-failure
    container_name: postgresql-ocr
    build:
      context: docker/postgres
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    ports:
      - "5431:5431"
    expose:
      - "5431"
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h $$DB_HOST -p $$PGPORT -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring

networks:
  custom:
    driver: bridge
